From 95218cb6725af9d225b18512431d17758f7dd7ae Mon Sep 17 00:00:00 2001
From: vmakarov <vmakarov@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Fri, 23 May 2014 01:52:28 +0000
Subject: [PATCH] 2014-05-22  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/61215
	* lra-elelimination.c (lra_eliminate_regs_1): Don't use
	simplify_gen_subreg until final substitution.



git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-4_9-branch@210839 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/lra-eliminations.c |   10 ++++++++++
 2 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/gcc/lra-eliminations.c b/gcc/lra-eliminations.c
index abdf697..2787820 100644
--- a/gcc/lra-eliminations.c
+++ b/gcc/lra-eliminations.c
@@ -565,6 +565,16 @@ lra_eliminate_regs_1 (rtx insn, rtx x, enum machine_mode mem_mode,
 	      alter_subreg (&x, false);
 	      return x;
 	    }
+	  else if (! subst_p)
+	    {
+	      /* LRA can transform subregs itself.  So don't call
+		 simplify_gen_subreg until LRA transformations are
+		 finished.  Function simplify_gen_subreg can do
+		 non-trivial transformations (like truncation) which
+		 might make LRA work to fail.  */
+	      SUBREG_REG (x) = new_rtx;
+	      return x;
+	    }
 	  else
 	    return simplify_gen_subreg (GET_MODE (x), new_rtx,
 					GET_MODE (new_rtx), SUBREG_BYTE (x));
-- 
1.7.1

