commit 40e073c60f6cc8df1320460fbf94adae9e7b5254
Author: Milian Wolff <mail@milianw.de>
Date:   Wed Jun 18 13:27:50 2014 +0200

    Fix compile with giflib-5.1.0 and upwards.
    
    See news about the giflib-5.1.0 release about the API break here:
    http://fossies.org/linux/giflib/NEWS
    
    REVIEW: 118811
    
    (cherry picked from commit 7c7a47575f1f57b5c0cc704826a5e5059939bbae)

diff --git a/khtml/imload/decoders/gifloader.cpp b/khtml/imload/decoders/gifloader.cpp
index 6c61ff5..09645a8 100644
--- a/khtml/imload/decoders/gifloader.cpp
+++ b/khtml/imload/decoders/gifloader.cpp
@@ -52,6 +52,16 @@ extern "C" {
 
 // #define DEBUG_GIFLOADER
 
+static void closeGif(GifFileType* file)
+{
+#if GIFLIB_MAJOR > 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR >= 1)
+    int errorCode;
+    DGifCloseFile(file, &errorCode);
+#else
+    DGifCloseFile(file);
+#endif
+}
+
 namespace khtmlImLoad {
 
 static int INTERLACED_OFFSET[] = { 0, 4, 2, 1 };
@@ -369,7 +379,7 @@ public:
         
         if (DGifSlurp(file) == GIF_ERROR)
         {
-            DGifCloseFile(file);
+            closeGif(file);
             return Error;
         }
         
@@ -378,7 +388,7 @@ public:
         if (file->ImageCount > 1) {
             // Verify it..
             if (!ImageManager::isAcceptableSize(file->SWidth, file->SHeight)) {
-                DGifCloseFile(file);
+                closeGif(file);
                 return Error;
             }
             notifyImageInfo(file->SWidth, file->SHeight);
@@ -390,7 +400,7 @@ public:
             //Extract colormap, geometry, so that we can create the frame
             SavedImage* curFrame = &file->SavedImages[frame];
             if (!ImageManager::isAcceptableSize(curFrame->ImageDesc.Width, curFrame->ImageDesc.Height)) {
-                DGifCloseFile(file);
+                closeGif(file);
                 return Error;
             }
         }
@@ -576,7 +586,7 @@ public:
             frame0->animProvider = new GIFAnimProvider(frame0, image, frameProps, bgColor);
         }
         
-        DGifCloseFile(file);
+        closeGif(file);
 
         return Done;
     }
