diff -up src/data-types/mailstream_ssl.c.gnutls src/data-types/mailstream_ssl.c
--- src/data-types/mailstream_ssl.c.gnutls	2014-04-24 19:24:04.000000000 -0300
+++ src/data-types/mailstream_ssl.c	2014-04-27 17:40:07.654349474 -0300
@@ -108,9 +108,15 @@ struct mailstream_ssl_context
   X509* client_x509;
   EVP_PKEY *client_pkey;
 #else
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_session session;
   gnutls_x509_crt client_x509;
   gnutls_x509_privkey client_pkey;
+#else
+  gnutls_session_t session;
+  gnutls_x509_crt_t client_x509;
+  gnutls_x509_privkey_t client_pkey;
+#endif
   gnutls_certificate_credentials_t gnutls_credentials;
 #endif
 #endif
@@ -128,7 +134,11 @@ struct mailstream_ssl_data {
 #else
 struct mailstream_ssl_data {
   int fd;
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_session session;
+#else
+  gnutls_session_t session;
+#endif
   gnutls_certificate_credentials_t xcred;
   struct mailstream_cancel * cancel;
 };
@@ -503,7 +513,11 @@ static struct mailstream_ssl_data * tls_
 
 #else
 
-static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session session, int fd);
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
+  static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session session, int fd);
+#else
+  static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session_t session, int fd);
+#endif
 static void mailstream_ssl_context_free(struct mailstream_ssl_context * ssl_ctx);
 
 #if GNUTLS_VERSION_NUMBER <= 0x020c00
@@ -512,14 +526,18 @@ static int mailstream_gnutls_client_cert
                                const gnutls_pk_algorithm *sign_algos,
                                int sign_algos_length, gnutls_retr_st *st)
 #else
-static int mailstream_gnutls_client_cert_cb(gnutls_session session,
-                               const gnutls_datum *req_ca_rdn, int nreqs,
-                               const gnutls_pk_algorithm *sign_algos,
+static int mailstream_gnutls_client_cert_cb(gnutls_session_t session,
+                               const gnutls_datum_t *req_ca_rdn, int nreqs,
+                               const gnutls_pk_algorithm_t *sign_algos,
                                int sign_algos_length, gnutls_retr2_st *st)
 #endif
 {
 	struct mailstream_ssl_context * ssl_context = (struct mailstream_ssl_context *)gnutls_session_get_ptr(session);
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
 	gnutls_certificate_type type = gnutls_certificate_type_get(session);
+#else
+	gnutls_certificate_type_t type = gnutls_certificate_type_get(session);
+#endif
 
 	st->ncerts = 0;
 
@@ -544,7 +562,11 @@ static struct mailstream_ssl_data * ssl_
   void (* callback)(struct mailstream_ssl_context * ssl_context, void * cb_data), void * cb_data)
 {
   struct mailstream_ssl_data * ssl_data;
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_session session;
+#else
+  gnutls_session_t session;
+#endif
   struct mailstream_cancel * cancel;
   gnutls_certificate_credentials_t xcred;
   int r;
@@ -578,7 +600,11 @@ static struct mailstream_ssl_data * ssl_
   gnutls_record_disable_padding(session);
   gnutls_dh_set_prime_bits(session, 512);
 
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_transport_set_ptr(session, (gnutls_transport_ptr) fd);
+#else
+  gnutls_transport_set_ptr(session, (gnutls_transport_ptr_t) fd);
+#endif
 
   /* lower limits on server key length restriction */
   gnutls_dh_set_prime_bits(session, 512);
@@ -1096,11 +1122,19 @@ ssize_t mailstream_ssl_get_certificate(m
   SSL *ssl_conn = NULL;
   X509 *cert = NULL;
 #else
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_session session = NULL;
   const gnutls_datum *raw_cert_list;
   unsigned int raw_cert_list_length;
   gnutls_x509_crt cert = NULL;
   size_t cert_size;
+#else
+  gnutls_session_t session = NULL;
+  const gnutls_datum_t *raw_cert_list;
+  unsigned int raw_cert_list_length;
+  gnutls_x509_crt_t cert = NULL;
+  size_t cert_size;
+#endif
 #endif
 
   if (cert_DER == NULL || stream == NULL || stream->low == NULL)
@@ -1230,7 +1264,11 @@ int mailstream_ssl_set_client_certificat
   ssl_context->client_x509 = (X509 *)x509;
   return 0;
 #else
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_datum tmp;
+#else
+  gnutls_datum_t tmp;
+#endif
   int r;
   ssl_context->client_x509 = NULL;
   if (len == 0)
@@ -1259,7 +1297,11 @@ int mailstream_ssl_set_client_private_ke
   ssl_context->client_pkey = (EVP_PKEY *)pkey;
   return 0;
 #else
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
   gnutls_datum tmp;
+#else
+  gnutls_datum_t tmp;
+#endif
   int r;
   ssl_context->client_pkey = NULL;
   if (len == 0)
@@ -1322,7 +1364,12 @@ static void mailstream_ssl_context_free(
     free(ssl_ctx);
 }
 #else
-static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session session, int fd)
+
+#if GNUTLS_VERSION_NUMBER <= 0x020c00
+  static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session session, int fd)
+#else
+  static struct mailstream_ssl_context * mailstream_ssl_context_new(gnutls_session_t session, int fd)
+#endif
 {
   struct mailstream_ssl_context * ssl_ctx;
   
