From b83ac74a8b87a770bdd78c7c23731bcc252393e4 Mon Sep 17 00:00:00 2001
From: Phillip Susi <psusi@ubuntu.com>
Date: Fri, 2 May 2014 21:50:50 -0400
Subject: [PATCH 207/208] libparted: don't trash filesystem when writing loop
 label

If you deleted the fake partition on a loop label, loop_write() would write
the loop signature to the device, zeroing out all other bytes in the first
sector.  When the disk contained an ext[234] filesystem and was using 2k
sectors, this would trash the super block residing in the 1-2kb part of the
sector causing the disk to become unrecognized.  Instead, read the existing
sector and only modify the first few bytes that contain the loop label.
---
 libparted/labels/loop.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/libparted/labels/loop.c b/libparted/labels/loop.c
index 8ebb1f4..98f9f23 100644
--- a/libparted/labels/loop.c
+++ b/libparted/labels/loop.c
@@ -170,7 +170,8 @@ loop_write (const PedDisk* disk)
 	/* if there is already a filesystem on the disk, we don't need to write the signature */
 	if (part && part->fs_type)
 		return 1;
-	memset (buf, 0, buflen);
+	if (!ped_device_read (disk->dev, buf, 0, 1))
+		return 0;
 	strcpy (buf, LOOP_SIGNATURE);
 
         return ped_device_write (disk->dev, buf, 0, 1);
-- 
1.9.0

