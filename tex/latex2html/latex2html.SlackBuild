#!/bin/sh
#-- latex2html for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.br>
# Suggested usage: $ latex2html.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008-2014 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.latex2html.org/

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=latex2html
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-2012}
JPVER=${JPVER:-2K8-jp20081220}
ARCH=noarch
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/tex/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Needs special latex
SB_JAPANESE=${SB_JAPANESE:-YES}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tgz
JPSRCARCHIVE=l2h-${JPVER}.tar.gz

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://mirrors.ctan.org/support/latex2html/${SRCARCHIVE}"
JPDL_URL="http://takeno.iee.niit.ac.jp/~shige/TeX/latex2html/current/data/${JPSRCARCHIVE}"

# if source is not present, download in source rootdir if possible
test -r ${CWD}/${SRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${DL_URL} || exit 1
test -r ${CWD}/${JPSRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${JPDL_URL} || exit 1

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
cd ${SRCDIR} || exit 1

chmod -R u+w,go+r-w,a-s .

SB_SROOT="$(pwd)"

if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh
fi

for i in Dos Mac OS2 Win32; do
  rm -f L2hos/${i}.pm
done
rm -rf cweb2html
rm -f readme.hthtml

if [ "${SB_JAPANESE}" = "YES" ] ;then
  cp -a ../${SRCDIR} ../${SRCDIR}JA
  mv ../${SRCDIR}JA ${SRCDIR}
fi

# don't generate gray images as output from latex2html
zcat ${SB_PATCHDIR}/${NAME}-2002.2.1-grayimg.patch.gz | patch -p1 -E --backup --verbose || exit 1

zcat ${CWD}/cfgcache.pm.gz > cfgcache.pm || exit 1
tar -xzf ${CWD}/${NAME}-manpages.tar.gz || exit 1

sb_configure() {
./configure \
  --prefix=/usr \
  --exec-prefix=/usr \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --sysconfdir=/etc \
  --datadir=/usr/share \
  --includedir=/usr/include \
  --libexecdir=/usr/libexec \
  --localstatedir=/var \
  --sharedstatedir=/usr/com \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --with-texpath=/usr/share/texmf/tex/latex/html \
  ${SB_LIBDIR}
}

( unset TMP TMPDIR TEMP
SB_LIBDIR="--libdir=/usr/share/latex2html --shlibdir=/usr/share/latex2html"
sb_configure || exit 1

perl -pi -e "s,/usr/(share/)?lib,/usr/share," cfgcache.pm || exit 1
make || exit 1

perl -pi -e "s,/usr,${PKG}/usr," cfgcache.pm || exit 1
perl -pi -e "s,/.*\\\${dd}texexpand,/usr/bin/texexpand,;
             s,/.*\\\${dd}pstoimg,/usr/bin/pstoimg,;
             s,/.*\\\${dd}*icons,\\\${LATEX2HTMLDIR}/icons,;
             s,/.*\\\${dd}rgb.txt,\\\${LATEX2HTMLDIR}/styles/rgb.txt,;
             s,/.*\\\${dd}styles\\\${dd}crayola.txt,\\\${LATEX2HTMLDIR}/styles/crayola.txt," \
             latex2html || exit 1
perl -pi -e "s,${PKG},," l2hconf.pm || exit 1

make install || exit 1
rm -f ${PKG}/usr/share/latex2html/versions/table.pl.orig
perl -pi -e "s,${PKG},," ${PKG}/usr/share/latex2html/cfgcache.pm || exit 1
perl -pi -e "s,${PKG},," ${PKG}/usr/bin/pstoimg || exit 1
perl -pi -e "s,${PKG},," ${PKG}/usr/bin/texexpand || exit 1
perl -pi -e "s,${PKG},," cfgcache.pm || exit 1
perl -pi -e "s,${SB_SROOT},," cfgcache.pm || exit 1
perl -pi -e "s,$cfg{'GS_LIB'} = q'';,$cfg{'GS_LIB'} = q'/usr/share/ghostscript/`gs --version`';," cfgcache.pm || exit 1
install -m0644 *.pm ${PKG}/usr/share/latex2html/ || exit 1

for f in cweb2html/cweb2html makeseg/makeseg makemap ; do
  perl -pi -e "s,/usr/local/bin/perl,/usr/bin/perl," ${PKG}/usr/share/latex2html/${f} || exit 1
done

# install man pages
mkdir -p ${PKG}/usr/man/man1
install -m0644 *.1 ${PKG}/usr/man/man1/ || exit 1

############################ Japanese
if [ "${SB_JAPANESE}" = "YES" ] ;then
( tar -xvf ${CWD}/${JPSRCARCHIVE} || exit 1
  cd ${SRCDIR} || exit 1

  SB_SROOT="$(pwd)"

  chmod -R u+w,go+r-w,a-s .

  sed s/latex2html/jlatex2html/g < ${CWD}/cfgcache.pm.gz  > cfgcache.pm || exit 1
  perl -pi -e "s,/usr/bin/dvips,/usr/bin/pdvips," cfgcache.pm || exit 1
  perl -pi -e "s,/usr/bin/latex,/usr/bin/platex," cfgcache.pm || exit 1

  SB_LIBDIR="--libdir=/usr/share/jlatex2html --shlibdir=/usr/share/jlatex2html"
  sb_configure || exit 1

  perl -pi -e "s,/usr/(share/)?lib,/usr/share,;
               s,%{_datadir}/latex2html,/usr/share/jlatex2html," cfgcache.pm || exit 1

  make || exit 1
  
  perl -pi -e "s,${PKG},," l2hconf.pm || exit 1
  perl -pi -e "s,\\\${dd}pstoimg,\\\${dd}jpstoimg, ;
              s,\\\${dd}texexpand,\\\${dd}jtexexpand," l2hconf.pm || exit 1

  for i in latex2html pstoimg texexpand ; do
    mv ${i} j${i} || exit 1
  done

  perl -pi -e "s,/usr,${PKG}/usr," cfgcache.pm || exit 1
  perl -pi -e "s,latex2html pstoimg texexpand,jlatex2html jpstoimg jtexexpand," config/install.pl || exit 1
  perl -pi -e "s,/.*\\\${dd}texexpand,/usr/bin/jtexexpand,;
               s,/.*\\\${dd}pstoimg,/usr/bin/jpstoimg,;
               s,/.*\\\${dd}*icons,\\\${LATEX2HTMLDIR}/icons,;
               s,/.*\\\${dd}rgb.txt,\\\${LATEX2HTMLDIR}/styles/rgb.txt,;
               s,/.*\\\${dd}styles\\\${dd}crayola.txt,\\\${LATEX2HTMLDIR}/styles/crayola.txt," \
               jlatex2html || exit 1
  perl -pi -e "s,${PKG},," l2hconf.pm || exit 1

  make install || exit 1
  rm -f ${PKG}/usr/share/latex2html/versions/table.pl.orig
  perl -pi -e "s,${PKG},," ${PKG}/usr/share/jlatex2html/cfgcache.pm || exit 1
  perl -pi -e "s,${PKG},," ${PKG}/usr/bin/jpstoimg || exit 1
  perl -pi -e "s,${PKG},," ${PKG}/usr/bin/jtexexpand || exit 1
  perl -pi -e "s,${PKG},," cfgcache.pm || exit 1
  perl -pi -e "s,${SB_SROOT},," cfgcache.pm || exit 1
  perl -pi -e "s,$cfg{'GS_LIB'} = q'';,$cfg{'GS_LIB'} = q'/usr/share/ghostscript/`gs --version`';," cfgcache.pm || exit 1
  install -m0644 *.pm ${PKG}/usr/share/jlatex2html/ || exit 1

  for f in cweb2html/cweb2html makeseg/makeseg makemap ; do
    perl -pi -e "s,/usr/local/bin/perl,/usr/bin/perl," ${PKG}/usr/share/jlatex2html/${f} || exit 1
  done
) || exit 1
fi
####################################
) || exit 1

mkdir -p ${PKG}/var/log/setup
cat > ${PKG}/var/log/setup/setup.${NAME} <<'EOF'
#!/bin/sh
#BLURB="Registers latex2html with tetex."

if [ -x usr/bin/texconfig-sys ] ;then
  chroot . /usr/bin/texconfig-sys rehash 2> /dev/null || :
elif [ -x usr/share/texmf/bin/texconfig-sys ] ;then
  export PATH=${PATH}:usr/share/texmf/bin
  chroot . /usr/share/texmf/bin/texconfig-sys rehash 2> /dev/null || :
fi
EOF
chmod 0755 ${PKG}/var/log/setup/setup.${NAME} || exit 1

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  BUGS FAQ LICENSE LICENSE.orig README ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
[ -r ChangeLog ] && head -n 1000 ChangeLog > ${DOCDIR}/ChangeLog
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644
find ${DOCDIR}/ -type f -size 0 -print0 | xargs -0 rm -f

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<'EOF'
#!/bin/sh
# Figure out our root directory
ROOTDIR=$(pwd)
unset CHROOT
if test "${ROOTDIR}" != "/"; then
 	CHROOT="chroot ${ROOTDIR} "
 	ROOTDIR="${ROOTDIR}/"
fi
if [ -x usr/bin/texconfig-sys ] ;then
  ${CHROOT} /usr/bin/texconfig-sys rehash 2> /dev/null || :
elif [ -x usr/share/texmf/bin/texconfig-sys ] ;then
  export PATH=${PATH}:usr/share/texmf/bin
  ${CHROOT} /usr/share/texmf/bin/texconfig-sys rehash 2> /dev/null || :
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/apply-patches.sh ${CWD}/${NAME}-manpages.tar.gz \
                 ${CWD}/*.pm.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/*.gz \
                 ${SBDIR}/patches/
  rmdir ${SBDIR}/patches
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
