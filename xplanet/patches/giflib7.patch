--- xplanet-1.3.0/src/libimage/gif.c.orig	2014-06-14 15:18:17.582735561 -0300
+++ xplanet-1.3.0/src/libimage/gif.c	2014-06-14 15:18:32.212629407 -0300
@@ -20,7 +20,7 @@
 
 #include <stdio.h>
 #include <stdlib.h>
-
+#define FALSE 0
 #include <gif_lib.h>
 
 /*
@@ -42,11 +42,11 @@ read_gif(const char *filename, int *widt
     int color_index;
     unsigned char *ptr = NULL;
 
-    infile = DGifOpenFileName(filename);
+    infile = DGifOpenFileName(filename, NULL);
 
     if (infile == NULL)
     {
-        PrintGifError();
+        printf("%s\n", GifErrorString(GIF_ERROR));
         return(0);
     }
 
@@ -54,7 +54,7 @@ read_gif(const char *filename, int *widt
     {
         if (DGifGetRecordType(infile, &record_type) == GIF_ERROR) 
         {
-            PrintGifError();
+            printf("%s\n", GifErrorString(GIF_ERROR));
             return(0);
         }
 
@@ -63,7 +63,7 @@ read_gif(const char *filename, int *widt
         case IMAGE_DESC_RECORD_TYPE:
             if (DGifGetImageDesc(infile) == GIF_ERROR)
             {
-                PrintGifError();
+                printf("%s\n", GifErrorString(GIF_ERROR));
                 return(0);
             }
 
@@ -107,14 +107,14 @@ read_gif(const char *filename, int *widt
             GifByteType *ext;
             if (DGifGetExtension(infile, &ext_code, &ext) == GIF_ERROR) 
             {
-                PrintGifError();
+                printf("%s\n", GifErrorString(GIF_ERROR));
                 return(0);
             }
             while (ext != NULL) 
             {
                 if (DGifGetExtensionNext(infile, &ext) == GIF_ERROR) 
                 {
-                    PrintGifError();
+                    printf("%s\n", GifErrorString(GIF_ERROR));
                     return(0);
                 }
             }
@@ -154,7 +154,7 @@ read_gif(const char *filename, int *widt
     
     free(buffer);
 
-    DGifCloseFile(infile);
+    DGifCloseFile(infile, NULL);
     return(1);
 }
 
@@ -178,7 +178,7 @@ write_gif(const char *filename, int widt
         return(0);
     }
 
-    colormap = MakeMapObject(colormap_size, NULL);
+    colormap = GifMakeMapObject(colormap_size, NULL);
 
     for (i = 0; i < width * height; i++)
     {
@@ -187,10 +187,10 @@ write_gif(const char *filename, int widt
         blue[i]  = (GifByteType) rgb[3*i+2];
     }
   
-    if (QuantizeBuffer(width, height, &colormap_size, red, green, blue,   
+    if (GifQuantizeBuffer(width, height, &colormap_size, red, green, blue,   
                        buffer, colormap->Colors) == GIF_ERROR)
     {
-        PrintGifError();
+        printf("%s\n", GifErrorString(GIF_ERROR));
         return(0);
     }
 
@@ -198,24 +198,24 @@ write_gif(const char *filename, int widt
     free(green);
     free(blue);
 
-    outfile = EGifOpenFileName((char *) filename, FALSE);
+    outfile = EGifOpenFileName((char *) filename, FALSE, NULL);
     if (outfile == NULL)
     {
-        PrintGifError();
+        printf("%s\n", GifErrorString(GIF_ERROR));
         return(0);
     }
 
     if (EGifPutScreenDesc(outfile, width, height, colormap_size, 0, colormap)
         == GIF_ERROR)
     {
-        PrintGifError();
+        printf("%s\n", GifErrorString(GIF_ERROR));
         return(0);
     }
 
     if (EGifPutImageDesc(outfile, 0, 0, width, height, FALSE, NULL)
         == GIF_ERROR)
     {
-        PrintGifError();
+        printf("%s\n", GifErrorString(GIF_ERROR));
         return(0);
     }
 
@@ -224,7 +224,7 @@ write_gif(const char *filename, int widt
     {
         if (EGifPutLine(outfile, ptr, width) == GIF_ERROR)
         {
-            PrintGifError();
+            printf("%s\n", GifErrorString(GIF_ERROR));
             return(0);
         }
         ptr += width;
@@ -232,8 +232,8 @@ write_gif(const char *filename, int widt
 
     EGifSpew(outfile);
 
-    if (EGifCloseFile(outfile) == GIF_ERROR) 
-        PrintGifError();
+    if (EGifCloseFile(outfile, NULL) == GIF_ERROR) 
+        printf("%s\n", GifErrorString(GIF_ERROR));
 
     free(buffer);
 
